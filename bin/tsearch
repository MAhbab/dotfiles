#!/bin/bash
VAULT_DIR="$HOME/Documents/mindspace/content"
SEARCH_TERM="$1"

while true; do
    files_to_search="$VAULT_DIR"
    if [ -n "$SEARCH_TERM" ]; then
        # A search term was provided. Grep for files containing that term.
        files_to_search=$(grep -lR -- "\- $SEARCH_TERM" "$VAULT_DIR")

        if [ -z "$files_to_search" ]; then
            echo "No files found containing '$SEARCH_TERM'"
            break
        fi
    fi

    # Corrected grep regex to properly find literal brackets
    # The files_to_search variable is intentionally unquoted to pass the list of files to grep
    INCOMPLETE_TASKS=$(grep -nr -- "- \[ \]" $files_to_search)

    if [ -z "$INCOMPLETE_TASKS" ]; then
        # Adjust exit message based on whether a search term was used
        if [ -n "$SEARCH_TERM" ]; then
            echo "No incomplete tasks found matching '$SEARCH_TERM'"
        else
            echo "No more incomplete tasks."
        fi
        break
    fi

    FZF_OUTPUT=$( \
        echo "$INCOMPLETE_TASKS" | \
        fzf --delimiter : --preview-window=wrap --preview "grep -F -C 10 --color=always -- {3..} {1}" \
                --header "Press ENTER to open, CTRL-X to complete, ESC to exit" \
                --expect=ctrl-x \
    )

    if [ -z "$FZF_OUTPUT" ]; then
        echo "Exiting."
        break
    fi

    KEY=$(echo "$FZF_OUTPUT" | head -n 1)
    SELECTED_TASK_LINE=$(echo "$FZF_OUTPUT" | tail -n 1)

    SELECTED_FILE=$(echo "$SELECTED_TASK_LINE" | cut -d ':' -f 1)
    SELECTED_LINE_NUM=$(echo "$SELECTED_TASK_LINE" | cut -d ':' -f 2)

    if [ "$KEY" = "ctrl-x" ]; then
        # Corrected sed regex to properly replace literal brackets
        sed -i '' "${SELECTED_LINE_NUM}s/- \[ \]/- [x]/" "$SELECTED_FILE"
    else # Default action (Enter)
        XDG_CONFIG_HOME="$HOME/dotfiles/config/nvim/main" nvim "$SELECTED_FILE" +"$SELECTED_LINE_NUM"
        break
    fi
done
